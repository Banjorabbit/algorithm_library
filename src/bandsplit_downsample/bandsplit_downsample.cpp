#include "bandsplit_downsample/bandsplit_downsample_chebyshev.h"

DEFINE_ALGORITHM_CONSTRUCTOR(BandsplitDownsample, BandsplitDownsampleChebyshev, BandsplitDownsampleConfiguration)

DEFINE_ALGORITHM_CONSTRUCTOR(CombineBandsplitDownsample, CombineBandsplitDownsampleChebyshev, CombineBandsplitDownsampleConfiguration)

// ----------------------------------------------------------------------------
// BandsplitDownsampleChebyshev

Eigen::ArrayXXf BandsplitDownsampleChebyshev::getLowpassCoefficients()
{
    Eigen::ArrayXXf coef(6, 5);
    coef << 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000,  //
        1.818044757272464, 0.854335936174255, 0.026642372743341, -0.428932154151615, -0.620575060159350,    //
        0.999999999999996, 1.000000000000002, 0.999999999999996, 1.000000000000004, 0.999999999999999,      //
        1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000,      //
        -0.486206613385642, -0.585742152942456, -0.753954205708594, -0.954483371357883, -1.168404084947879, //
        0.068580729605342, 0.164693248535789, 0.334859377428873, 0.557038030644177, 0.831922787257009;
    return coef;
}

float BandsplitDownsampleChebyshev::getLowpassGain() { return 0.001635997260502; }

Eigen::ArrayXXf BandsplitDownsampleChebyshev::getHighpassCoefficients()
{
    Eigen::ArrayXXf coef(6, 5);
    coef << 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, //
        0.223770876103227, -1.963643130856024, -1.836693708506797, -1.720773373533492, -1.564886103235366, //
        -0.164026153041281, 0.982802384568755, 0.977709430288654, 0.999213443182868, 1.051767649270369,    //
        1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000,     //
        0.249857716248029, -0.230272169691049, -0.642165036815754, -1.066171731410542, -1.187840170082569, //
        -0.150350748015639, 0.067981708070760, 0.418517632986671, 0.752651831950995, 0.861915540265136;
    return coef;
}

float BandsplitDownsampleChebyshev::getHighpassGain() { return 0.111239708337364; }

// ----------------------------------------------------------------------------
// CombineBandsplitDownsampleChebyshev

Eigen::ArrayXXf CombineBandsplitDownsampleChebyshev::getLowpassCoefficients()
{
    Eigen::ArrayXXf coef(6, 5);
    coef << 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000,  //
        1.818044757272464, 0.854335936174255, 0.026642372743341, -0.428932154151615, -0.620575060159350,    //
        0.999999999999996, 1.000000000000002, 0.999999999999996, 1.000000000000004, 0.999999999999999,      //
        1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000,      //
        -0.486206613385642, -0.585742152942456, -0.753954205708594, -0.954483371357883, -1.168404084947879, //
        0.068580729605342, 0.164693248535789, 0.334859377428873, 0.557038030644177, 0.831922787257009;
    return coef;
}

float CombineBandsplitDownsampleChebyshev::getLowpassGain() { return 0.001635997260502; }